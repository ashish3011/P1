Lab 4
1. a
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity Lab4_1_171B039 is
Port ( a0,a1,a2,a3 : in STD_LOGIC;
b0,b1,b2,b3 : in STD_LOGIC;
c0,c1,c2,c3,c4 : inout STD_LOGIC;
s0,s1,s2,s3 : out STD_LOGIC);
end Lab4_1_171B039;
architecture Structural of Lab4_1_171B039 is
component FullAdder
Port ( a : in STD_LOGIC;
b : in STD_LOGIC;

c : in STD_LOGIC;
s : out STD_LOGIC;
ca: out STD_LOGIC);
end component;

begin
FA1: FullAdder PORT MAP(a0,b0,c0,s0,c1);
FA2: FullAdder PORT MAP(a1,b1,c1,s1,c2);
FA3: FullAdder PORT MAP(a2,b2,c2,s2,c3);
FA4: FullAdder PORT MAP(a3,b3,c3,s3,c4);
end Structural;

Test Code:
-- Stimulus process
stim_proc: process
begin
-- hold reset state for 100 ns.
a0<='1'; a1<='0'; a2<='1'; a3<='1'; c0<='0'; b0<='1'; b1<='1'; b2<='0'; b3<='1'; s0 <='0';
s1 <='0'; s2 <='0'; s3 <='1'; c4 <='1';
wait for 100 ns;
-- insert stimulus here
wait;
end process;

1 b
1 (a)
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity Lab4_1a_171B039 is
generic (N: integer := 4);
Port ( a : in STD_LOGIC_VECTOR (N-1 downto 0);
b : in STD_LOGIC_VECTOR (N-1 downto 0);
c : inout STD_LOGIC_VECTOR (N downto 0);
s : out STD_LOGIC_VECTOR (N-1 downto 0));
end Lab4_1a_171B039;
architecture Structural of Lab4_1a_171B039 is
component FullAdder
Port ( a : in STD_LOGIC;
b : in STD_LOGIC;
c : in STD_LOGIC;
s:out STD_LOGIC;
ca : out STD_LOGIC);
end component;
begin
L1: for i in 0 to N-1 generate
FA: fulladder port map (A(i), B(i), C(i), S(i), C(i+1));
end generate;
end Structural;

Test Code:
stim_proc: process
begin
-- hold reset state for 100 ns.
a<="1101"; b<="1011";
wait for 100 ns;
-- insert stimulus here
wait;
end process;

2

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity Lab4_2_171B039 is
generic (N: integer := 4);
Port ( a : in STD_LOGIC_VECTOR (N-1 downto 0);
b : in STD_LOGIC_VECTOR (N-1 downto 0);
c : inout STD_LOGIC_VECTOR (N downto 0);
s : out STD_LOGIC_VECTOR (N-1 downto 0);
m : in STD_LOGIC);
end Lab4_2_171B039;
architecture Structural of Lab4_2_171B039 is
signal p : std_logic_vector (N-1 downto 0);
component FullAdder
Port ( a : in STD_LOGIC;
b : in STD_LOGIC;
c : in STD_LOGIC;
s:out STD_LOGIC;
ca : out STD_LOGIC);
end component;

begin
L1: for i in 0 to N-1 generate
c(0)<=m;
p(i)<= m xor b(i);
FA: FullAdder port map (a(i), p(i), c(i), s(i), c(i+1));
end generate;
end Structural;
